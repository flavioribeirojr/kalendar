{"version":3,"sources":["components/header/Header.module.css","components/footer/Footer.module.css","components/calendar/header/Header.module.css","components/app/App.module.css","components/calendar/month-day-cell/MonthDayCell.module.css","components/calendar/Calendar.module.css","components/icon/icons.enum.ts","components/icon/icon-mapper.ts","components/icon/Icon.tsx","config/navigation.config.ts","components/header/Header.tsx","config/app.config.ts","config/index.ts","components/footer/Footer.tsx","components/calendar/month-slots-generator/month-slots-generator.ts","components/calendar/week-slots-generator/week-slots-generator.ts","components/calendar/Constants.ts","components/calendar/header/Header.tsx","components/calendar/month-day-cell/MonthDayCell.tsx","utils/class-name.ts","components/calendar/Calendar.tsx","components/calendar/month-day-creator.ts","components/calendar/useCalendarState.ts","components/app/App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","IconNames","codeBranch","faCodeBranch","github","faGithub","twitter","faTwitter","linkedin","faLinkedin","angleLeft","faAngleLeft","angleRight","faAngleRight","Icon","name","className","icon","IconMapper","project","Header","styles","header","headerTitle","headerNav","href","NavigationConfig","headerNavLink","headerNavLinkIcon","app","author","links","link","navigation","Config","Footer","footer","footerAuthor","footerAuthorTitle","map","key","footerAuthorLink","footerAuthorLinkIcon","flattenWeekDays","weekDays","weekDayCollection","generateForDate","dateReference","weekGenerator","dateOfMonthCreator","firstDayOfTheMonth","Date","setDate","getFirstDateOfMonth","dateOfMonthIndex","nextDayWeek","getDate","getMonthDatesCreator","Array","from","keys","reduce","createWeekGenerator","dayCreator","generateWeekSlots","firstDayOfTheWeek","dateReferenceWeekDay","getDay","startOfTheWeek","getStartOfTheWeek","indexOfDayOfTheWeek","nextDayOfTheWeek","MonthNames","activeDate","changeToNextMonth","changeToPreviousMonth","calendarHead","calendarHeadTitle","getMonth","getFullYear","calendarHeadOptions","calendarHeadOptionsButton","onClick","MonthDayCell","classBinding","day","monthDayCell","differentMonth","dayIsOnSameMonth","Object","fullClassName","Calendar","activeMonthDate","CalendarHeader","DefaultHeader","DefaultMonthDayCell","defaultDate","useState","setActiveDate","changeActiveDatMonth","nextMonth","newDateMonth","setMonth","useCalendarState","weekSlotGenerator","CreateWeekSlotsGenerator","date","monthDaysSlots","MonthSlotsGenerator","calendar","calendarGrid","monthDaySlot","toDateString","App","wrapper","main","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd6c968c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1MOL-\",\"headerTitle\":\"Header_headerTitle__1mbAM\",\"headerNav\":\"Header_headerNav__2ZE1z\",\"headerNavLink\":\"Header_headerNavLink__18gnh\",\"headerNavLinkIcon\":\"Header_headerNavLinkIcon__1jXA6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__BKhgK\",\"footerAuthor\":\"Footer_footerAuthor__3Z6iP\",\"footerAuthorTitle\":\"Footer_footerAuthorTitle__2Ayt3\",\"footerAuthorLink\":\"Footer_footerAuthorLink__2avTj\",\"footerAuthorLinkIcon\":\"Footer_footerAuthorLinkIcon__3nUOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarHead\":\"Header_calendarHead__1icdx\",\"calendarHeadTitle\":\"Header_calendarHeadTitle__2ScNj\",\"calendarHeadOptions\":\"Header_calendarHeadOptions__2N0UG\",\"calendarHeadOptionsButton\":\"Header_calendarHeadOptionsButton__JKBDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2fr7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monthDayCell\":\"MonthDayCell_monthDayCell__35Gfz\",\"differentMonth\":\"MonthDayCell_differentMonth__1c_SL\",\"monthDayCellDay\":\"MonthDayCell_monthDayCellDay__2j_cK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"Calendar_calendar__3rdqA\",\"calendarGrid\":\"Calendar_calendarGrid__2Zj3q\"};","export enum IconNames {\n  codeBranch,\n  twitter,\n  linkedin,\n  github,\n  angleLeft,\n  angleRight\n}","import { IconNames } from './icons.enum';\nimport { faCodeBranch, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub, faTwitter, faLinkedin } from '@fortawesome/free-brands-svg-icons';\n\nexport default {\n  [IconNames.codeBranch]: faCodeBranch,\n  [IconNames.github]: faGithub,\n  [IconNames.twitter]: faTwitter,\n  [IconNames.linkedin]: faLinkedin,\n  [IconNames.angleLeft]: faAngleLeft,\n  [IconNames.angleRight]: faAngleRight\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport IconMapper from './icon-mapper';\nimport { IconNames } from './icons.enum';\n\ninterface IconProps {\n  name: IconNames,\n  className?: string\n};\n\nexport function Icon({ name, className }: IconProps) {\n  return (\n    <FontAwesomeIcon\n      className={ className }\n      icon={ IconMapper[name]}\n    />\n  );\n}","export default {\n  project: 'https://github.com/flavioribeirojr/kalendar'\n}","import React from 'react';\nimport { Icon, IconNames } from '../icon';\nimport styles from './Header.module.css';\nimport NavigationConfig from '../../config/navigation.config';\n\nexport function Header() {\n  return (\n    <header className={styles.header}>\n      <h1 className={styles.headerTitle}>\n        Kalendar\n      </h1>\n      <nav className={styles.headerNav}>\n        <a\n          href={NavigationConfig.project}\n          className={styles.headerNavLink}\n        >\n          <Icon\n            name={IconNames.codeBranch}\n            className={styles.headerNavLinkIcon}\n          />\n          Fork me\n        </a>\n      </nav>\n    </header>\n  );\n}","import { IconNames } from '../components/icon';\n\nexport default {\n  author: {\n    name: 'Flávio Ribeiro',\n    links: [\n      {\n        link: 'https://twitter.com/flavioribeirojr',\n        icon: IconNames.twitter\n      },\n      {\n        link: 'https://www.linkedin.com/in/fl%C3%A1vio-j%C3%BAnior/',\n        icon: IconNames.linkedin\n      },\n      {\n        link: 'https://github.com/flavioribeirojr',\n        icon: IconNames.github\n      }\n    ]\n  }\n}","import app from './app.config';\nimport navigation from './navigation.config';\n\nexport default {\n  app,\n  navigation\n}","import React from 'react';\nimport { Icon } from '../icon';\nimport Config from '../../config';\nimport styles from './Footer.module.css';\n\nconst { author } = Config.app;\n\nexport function Footer() {\n  return (\n    <footer className={styles.footer}>\n      <address className={styles.footerAuthor}>\n        <h2 className={styles.footerAuthorTitle}>\n          {author.name}\n        </h2>\n        {\n          author\n            .links\n            .map(link => (\n              <a\n                key={link.link}\n                href={link.link}\n                className={styles.footerAuthorLink}\n              >\n                <Icon\n                  name={link.icon}\n                  className={styles.footerAuthorLinkIcon}\n                />\n              </a>\n            ))\n        }\n      </address>\n    </footer>\n  );\n}","import { CalendarDay } from '../day.type';\n\nconst NUMBER_OF_WEEKS = 6;\nconst NUMBER_OF_DAYS_IN_WEEK = 7;\n\ntype WeekGenerator = (date: Date) => Array<CalendarDay>;\n\nfunction generateForDate(dateReference: Date, weekGenerator: WeekGenerator): Array<CalendarDay> {\n  const dateOfMonthCreator = getMonthDatesCreator(dateReference);\n\n  return Array\n    .from(Array(NUMBER_OF_WEEKS).keys())\n    .map(dateOfMonthCreator)\n    .map(weekGenerator)\n    .reduce(flattenWeekDays, []);\n}\n\nfunction getMonthDatesCreator(dateReference: Date) {\n  const firstDayOfTheMonth = getFirstDateOfMonth(dateReference);\n\n  return function createDayOfMonth(dateOfMonthIndex: number): Date {\n    const nextDayWeek = new Date(firstDayOfTheMonth);\n    nextDayWeek.setDate(firstDayOfTheMonth.getDate() + (NUMBER_OF_DAYS_IN_WEEK * dateOfMonthIndex));\n\n    return nextDayWeek;\n  }\n}\n\nfunction getFirstDateOfMonth(dateReference: Date) {\n  const firstDayOfTheMonth = new Date(dateReference);\n  firstDayOfTheMonth.setDate(1);\n\n  return firstDayOfTheMonth;\n}\n\nfunction flattenWeekDays(weekDays: Array<CalendarDay>, weekDayCollection: Array<CalendarDay>) {\n  return [\n    ...weekDays,\n    ...weekDayCollection\n  ];\n}\n\nexport default {\n  generateForDate\n}","import { CalendarDay } from '../day.type';\n\ntype DayCreator = (date: Date) => CalendarDay;\n\nfunction createWeekGenerator(dayCreator: DayCreator) {\n  function generateWeekSlots(dateReference: Date): Array<CalendarDay> {\n    const firstDayOfTheWeek = getStartOfTheWeek(dateReference);\n\n    return Array\n      .from(Array(7).keys())\n      .map(createNextDayOfTheWeekDate);\n\n    function getStartOfTheWeek(dateReference: Date): Date {\n      const dateReferenceWeekDay = dateReference.getDay();\n      const startOfTheWeek = new Date(dateReference);\n    \n      startOfTheWeek.setDate(dateReference.getDate() - dateReferenceWeekDay);\n      return startOfTheWeek;\n    }\n  \n    function createNextDayOfTheWeekDate(indexOfDayOfTheWeek: number): CalendarDay {\n      const nextDayOfTheWeek = new Date(firstDayOfTheWeek);\n      nextDayOfTheWeek.setDate(firstDayOfTheWeek.getDate() + indexOfDayOfTheWeek);\n  \n      return dayCreator(nextDayOfTheWeek);\n    }\n  }\n\n  return {\n    generateWeekSlots\n  };\n}\n\nexport default createWeekGenerator;","export const MonthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const WeekdayNames = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday'\n];","import React from 'react';\nimport { HeaderProps } from '../header.type';\nimport { MonthNames } from '../Constants';\nimport { Icon, IconNames } from '../../icon';\nimport styles from './Header.module.css';\n\nexport function Header({ activeDate, changeToNextMonth, changeToPreviousMonth }: HeaderProps) {\n  return (\n    <div className={styles.calendarHead}>\n      <h3 className={styles.calendarHeadTitle}>\n        { MonthNames[activeDate.getMonth()] }, { activeDate.getFullYear() }\n      </h3>\n      <div className={styles.calendarHeadOptions}>\n        <button\n          className={styles.calendarHeadOptionsButton}\n          onClick={changeToPreviousMonth}\n        >\n          <Icon\n            name={IconNames.angleLeft}\n          />\n        </button>\n        <button\n          className={styles.calendarHeadOptionsButton}\n          onClick={changeToNextMonth}\n        >\n          <Icon\n            name={IconNames.angleRight}\n          />\n        </button>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { MonthDayCellProps } from '../month-day-cell.type';\nimport { className } from '../../../utils';\nimport styles from './MonthDayCell.module.css';\n\nexport function MonthDayCell({ day }: MonthDayCellProps) {\n  return (\n    <div\n      className={className({\n        [styles.monthDayCell]: true,\n        [styles.differentMonth]: !day.dayIsOnSameMonth\n      })}\n    >\n      {day.day.getDate()}\n    </div>\n  );\n}","export function className(classBinding: { [key: string]: boolean }) {\n  return Object\n    .keys(classBinding)\n    .reduce((fullClassName, className) => {\n      if (classBinding[className]) {\n        return `${fullClassName} ${className}`;\n      }\n\n      return fullClassName;\n    }, '');\n}","import React from 'react';\nimport { MonthSlotsGenerator } from './month-slots-generator';\nimport { CreateWeekSlotsGenerator } from './week-slots-generator';\nimport { Header as DefaultHeader } from './header';\nimport { MonthDayCell as DefaultMonthDayCell } from './month-day-cell';\nimport { Header } from './header.type';\nimport { MonthDayCell } from './month-day-cell.type';\nimport { createDayOfMonthGenerator } from './month-day-creator';\nimport { useCalendarState } from './useCalendarState';\nimport styles from './Calendar.module.css';\n\ntype CalendarProps = {\n  header?: Header,\n  monthDayCell?: MonthDayCell,\n  defaultDate?: Date\n};\n\nexport function Calendar({\n  header: CalendarHeader = DefaultHeader,\n  monthDayCell: MonthDayCell = DefaultMonthDayCell,\n  defaultDate = new Date()\n}: CalendarProps) {\n  const { activeDate, changeToNextMonth, changeToPreviousMonth } = useCalendarState(defaultDate);\n  const weekSlotGenerator = CreateWeekSlotsGenerator(createDayOfMonthGenerator(activeDate));\n  const monthDaysSlots = MonthSlotsGenerator.generateForDate(activeDate, weekSlotGenerator.generateWeekSlots);\n\n  return (\n    <div className={styles.calendar}>\n      <CalendarHeader\n        activeDate={activeDate}\n        changeToNextMonth={changeToNextMonth}\n        changeToPreviousMonth={changeToPreviousMonth}\n      />\n      <div className={styles.calendarGrid}>\n        {\n          monthDaysSlots\n            .map(monthDaySlot => (\n              <MonthDayCell\n                key={monthDaySlot.day.toDateString()}\n                day={monthDaySlot}\n              />\n            ))\n        }\n      </div>\n    </div>\n  );\n}","import { CalendarDay } from './day.type';\n\nexport function createDayOfMonthGenerator(activeMonthDate: Date) {\n  return function createDay(date: Date): CalendarDay {\n    return {\n      day: date,\n      dayIsOnSameMonth: date.getMonth() === activeMonthDate.getMonth()\n    };\n  }\n}","import { useState, useEffect } from 'react';\n\nexport function useCalendarState(defaultDate: Date) {\n  const [ activeDate, setActiveDate ] = useState(new Date());\n\n  function setDefaultDate() {\n    setActiveDate(defaultDate);\n  }\n\n  // useEffect(setDefaultDate, [defaultDate]);\n\n  function changeToPreviousMonth() {\n    changeActiveDatMonth(activeDate.getMonth() -1);\n  }\n\n  function changeToNextMonth() {\n    changeActiveDatMonth(activeDate.getMonth() + 1);\n  }\n\n  function changeActiveDatMonth(nextMonth: number) {\n    const newDateMonth = new Date(activeDate);\n    newDateMonth.setMonth(nextMonth);\n\n    if (activeDate.getDate() !== newDateMonth.getDate()) {\n      newDateMonth.setDate(0);\n    }\n\n    setActiveDate(newDateMonth);\n  }\n\n  return {\n    activeDate,\n    changeToPreviousMonth,\n    changeToNextMonth\n  };\n}","import React from 'react';\nimport styles from './App.module.css';\nimport { Header } from '../header';\nimport { Footer } from '../footer';\nimport { Calendar } from '../calendar';\n\nexport function App(): React.ReactElement {\n  return (\n    <div className={styles.wrapper}>\n      <Header />\n      <main className={styles.main}>\n        <Calendar />\n      </main>\n      <Footer />\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/body.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}