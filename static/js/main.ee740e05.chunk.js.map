{"version":3,"sources":["components/header/Header.module.css","components/icon/icons.enum.ts","components/icon/icon-mapper.ts","components/icon/Icon.tsx","config/navigation.config.ts","components/header/Header.tsx","config/app.config.ts","config/index.ts","components/footer/Footer.tsx","components/app/App.tsx","serviceWorker.js","index.tsx","components/footer/Footer.module.css","components/app/App.module.css"],"names":["module","exports","IconNames","codeBranch","faCodeBranch","github","faGithub","twitter","faTwitter","linkedin","faLinkedin","Icon","name","className","icon","IconMapper","project","Header","styles","header","headerTitle","headerNav","href","NavigationConfig","headerNavLink","headerNavLinkIcon","app","author","links","link","navigation","Config","Footer","footer","footerAuthor","footerAuthorTitle","map","key","footerAuthorLink","footerAuthorLinkIcon","App","wrapper","main","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,4BAA4B,UAAY,0BAA0B,cAAgB,8BAA8B,kBAAoB,oC,gECDxLC,E,0EAAAA,O,2BAAAA,I,qBAAAA,I,uBAAAA,I,oBAAAA,M,0BCIZ,sBACGA,EAAUC,WAAaC,KAD1B,cAEGF,EAAUG,OAASC,KAFtB,cAGGJ,EAAUK,QAAUC,KAHvB,cAIGN,EAAUO,SAAWC,KAJxB,GCMO,SAASC,EAAT,GAA+C,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,UAC3B,OACE,kBAAC,IAAD,CACEA,UAAYA,EACZC,KAAOC,EAAWH,K,oBCdT,GACbI,QAAS,+CCIJ,SAASC,IACd,OACE,4BAAQJ,UAAWK,IAAOC,QACxB,wBAAIN,UAAWK,IAAOE,aAAtB,YAGA,yBAAKP,UAAWK,IAAOG,WACrB,uBACEC,KAAMC,EAAiBP,QACvBH,UAAWK,IAAOM,eAElB,kBAACb,EAAD,CACEC,KAAMV,EAAUC,WAChBU,UAAWK,IAAOO,oBANtB,aCVO,ICCA,GACbC,IDFa,CACbC,OAAQ,CACNf,KAAM,oBACNgB,MAAO,CACL,CACEC,KAAM,sCACNf,KAAMZ,EAAUK,SAElB,CACEsB,KAAM,uDACNf,KAAMZ,EAAUO,UAElB,CACEoB,KAAM,qCACNf,KAAMZ,EAAUG,WCXtByB,c,gBCAMH,EAAWI,EAAOL,IAAlBC,OAED,SAASK,IACd,OACE,4BAAQnB,UAAWK,IAAOe,QACxB,6BAASpB,UAAWK,IAAOgB,cACzB,wBAAIrB,UAAWK,IAAOiB,mBACnBR,EAAOf,MAGRe,EACGC,MACAQ,KAAI,SAAAP,GAAI,OACP,uBACEQ,IAAKR,EAAKA,KACVP,KAAMO,EAAKA,KACXhB,UAAWK,IAAOoB,kBAElB,kBAAC3B,EAAD,CACEC,KAAMiB,EAAKf,KACXD,UAAWK,IAAOqB,6BCpB7B,SAASC,IACd,OACE,yBAAK3B,UAAWK,IAAOuB,SACrB,kBAACxB,EAAD,MACA,0BAAMJ,UAAWK,IAAOwB,MAAxB,oBAGA,kBAACV,EAAD,OCAcW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACV,EAAD,OAEFW,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBExI5B9D,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAe,6BAA6B,kBAAoB,kCAAkC,iBAAmB,iCAAiC,qBAAuB,uC,kBCA/ND,EAAOC,QAAU,CAAC,QAAU,qBAAqB,KAAO,kBAAkB,uBAAyB,uC","file":"static/js/main.ee740e05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1MOL-\",\"headerTitle\":\"Header_headerTitle__1mbAM\",\"headerNav\":\"Header_headerNav__2ZE1z\",\"headerNavLink\":\"Header_headerNavLink__18gnh\",\"headerNavLinkIcon\":\"Header_headerNavLinkIcon__1jXA6\"};","export enum IconNames {\n  codeBranch,\n  twitter,\n  linkedin,\n  github\n}","import { IconNames } from './icons.enum';\nimport { faCodeBranch } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub, faTwitter, faLinkedin } from '@fortawesome/free-brands-svg-icons';\n\nexport default {\n  [IconNames.codeBranch]: faCodeBranch,\n  [IconNames.github]: faGithub,\n  [IconNames.twitter]: faTwitter,\n  [IconNames.linkedin]: faLinkedin\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport IconMapper from './icon-mapper';\nimport { IconNames } from './icons.enum';\n\ninterface IconProps {\n  name: IconNames,\n  className?: string\n};\n\nexport function Icon({ name, className }: IconProps) {\n  return (\n    <FontAwesomeIcon\n      className={ className }\n      icon={ IconMapper[name]}\n    />\n  );\n}","export default {\n  project: 'https://github.com/flavioribeirojr/kalendar'\n}","import React from 'react';\nimport { Icon, IconNames } from '../icon';\nimport styles from './Header.module.css';\nimport NavigationConfig from '../../config/navigation.config';\n\nexport function Header() {\n  return (\n    <header className={styles.header}>\n      <h1 className={styles.headerTitle}>\n        Kalendar\n      </h1>\n      <nav className={styles.headerNav}>\n        <a\n          href={NavigationConfig.project}\n          className={styles.headerNavLink}\n        >\n          <Icon\n            name={IconNames.codeBranch}\n            className={styles.headerNavLinkIcon}\n          />\n          Fork me\n        </a>\n      </nav>\n    </header>\n  );\n}","import { IconNames } from '../components/icon';\n\nexport default {\n  author: {\n    name: 'Fl√°vio Ribeiro',\n    links: [\n      {\n        link: 'https://twitter.com/flavioribeirojr',\n        icon: IconNames.twitter\n      },\n      {\n        link: 'https://www.linkedin.com/in/fl%C3%A1vio-j%C3%BAnior/',\n        icon: IconNames.linkedin\n      },\n      {\n        link: 'https://github.com/flavioribeirojr',\n        icon: IconNames.github\n      }\n    ]\n  }\n}","import app from './app.config';\nimport navigation from './navigation.config';\n\nexport default {\n  app,\n  navigation\n}","import React from 'react';\nimport { Icon } from '../icon';\nimport Config from '../../config';\nimport styles from './Footer.module.css';\n\nconst { author } = Config.app;\n\nexport function Footer() {\n  return (\n    <footer className={styles.footer}>\n      <address className={styles.footerAuthor}>\n        <h2 className={styles.footerAuthorTitle}>\n          {author.name}\n        </h2>\n        {\n          author\n            .links\n            .map(link => (\n              <a\n                key={link.link}\n                href={link.link}\n                className={styles.footerAuthorLink}\n              >\n                <Icon\n                  name={link.icon}\n                  className={styles.footerAuthorLinkIcon}\n                />\n              </a>\n            ))\n        }\n      </address>\n    </footer>\n  );\n}","import React from 'react';\nimport styles from './App.module.css';\nimport { Header } from '../header';\nimport { Footer } from '../footer';\n\nexport function App(): React.ReactElement {\n  return (\n    <div className={styles.wrapper}>\n      <Header />\n      <main className={styles.main}>\n        Work in progress\n      </main>\n      <Footer />\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/body.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__BKhgK\",\"footerAuthor\":\"Footer_footerAuthor__3Z6iP\",\"footerAuthorTitle\":\"Footer_footerAuthorTitle__2Ayt3\",\"footerAuthorLink\":\"Footer_footerAuthorLink__2avTj\",\"footerAuthorLinkIcon\":\"Footer_footerAuthorLinkIcon__3nUOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2fr7G\",\"main\":\"App_main__2IQkG\",\"textProgressiveEllipse\":\"App_textProgressiveEllipse__3Wh2q\"};"],"sourceRoot":""}